[
  {
    "name": "<historical-lig-values>",
    "syntax": "[ historical-ligatures | no-historical-ligatures ]"
  },
  {
    "name": "<opentype-tag>",
    "syntax": "<string>"
  },
  {
    "name": "<length>",
    "syntax": ""
  },
  {
    "name": "<track-breadth>",
    "syntax": "<length-percentage [0,∞]> | <flex [0,∞]> | min-content | max-content | auto"
  },
  {
    "name": "<dashed-function>",
    "syntax": ""
  },
  {
    "name": "<shape-box>",
    "syntax": "<visual-box> | margin-box"
  },
  {
    "name": "<colon-token>",
    "syntax": ""
  },
  {
    "name": "<mq-boolean>",
    "syntax": "<integer [0,1]>"
  },
  {
    "name": "<function-token>",
    "syntax": ""
  },
  {
    "name": "<at-keyword-token>",
    "syntax": ""
  },
  {
    "name": "<ns-prefix>",
    "syntax": "[ <ident-token> | '*' ]? '|'"
  },
  {
    "name": "hwb()",
    "syntax": "hwb( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )"
  },
  {
    "name": "<custom-selector>",
    "syntax": "<custom-arg>? : <extension-name> [ ( <custom-arg>+#? ) ]? ;"
  },
  {
    "name": "<mask-source>",
    "syntax": "<url>"
  },
  {
    "name": "<percentage>",
    "syntax": ""
  },
  {
    "name": "tan()",
    "syntax": "tan( <calc-sum> )"
  },
  {
    "name": "<bg-position>",
    "syntax": "[ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ center | [ left | right ] <length-percentage>? ] && [ center | [ top | bottom ] <length-percentage>? ] ]"
  },
  {
    "name": "<compound-selector-list>",
    "syntax": "<compound-selector>#"
  },
  {
    "name": "<ndashdigit-dimension>",
    "syntax": ""
  },
  {
    "name": "<content-position>",
    "syntax": "center | start | end | flex-start | flex-end"
  },
  {
    "name": "<relative-real-selector-list>",
    "syntax": "<relative-real-selector>#"
  },
  {
    "name": "<step-position>",
    "syntax": "jump-start | jump-end | jump-none | jump-both | start | end"
  },
  {
    "name": "rgb()",
    "syntax": "[ <legacy-rgb-syntax> | <modern-rgb-syntax> ]"
  },
  {
    "name": "<declaration-list>",
    "syntax": ""
  },
  {
    "name": "<svg-paint>",
    "syntax": "child | child( <integer> )"
  },
  {
    "name": "<isolation-mode>",
    "syntax": "auto | isolate"
  },
  {
    "name": "<baseline-position>",
    "syntax": "[ first | last ]? && baseline"
  },
  {
    "name": "<resolution>",
    "syntax": ""
  },
  {
    "name": "round()",
    "syntax": "round( <rounding-strategy>?, <calc-sum>, <calc-sum>? )"
  },
  {
    "name": "<bool-and>",
    "syntax": "and <bool-in-parens>"
  },
  {
    "name": "oklch()",
    "syntax": "oklch( [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ <hue> | none] [ / [<alpha-value> | none] ]? )"
  },
  {
    "name": "<)-token>",
    "syntax": ""
  },
  {
    "name": "<qualified-rule-list>",
    "syntax": ""
  },
  {
    "name": "<counter>",
    "syntax": "<counter()> | <counters()>"
  },
  {
    "name": "<display-inside>",
    "syntax": "flow | flow-root | table | flex | grid | ruby"
  },
  {
    "name": "<mf-boolean>",
    "syntax": "<mf-name>"
  },
  {
    "name": "<attribute-selector>",
    "syntax": "'[' <wq-name> ']' | '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'"
  },
  {
    "name": "filter()",
    "syntax": "filter( [ <image> | <string> ], <filter-value-list> )"
  },
  {
    "name": "<custom-property-name>",
    "syntax": ""
  },
  {
    "name": "<linear-color-stop>",
    "syntax": "<color> <length-percentage>?"
  },
  {
    "name": "<number>",
    "syntax": ""
  },
  {
    "name": "radial-gradient()",
    "syntax": "radial-gradient( [ <radial-gradient-syntax> ] )"
  },
  {
    "name": "<id>",
    "syntax": ""
  },
  {
    "name": "<timeline-range-name>",
    "syntax": ""
  },
  {
    "name": "<numeric-fraction-values>",
    "syntax": "[ diagonal-fractions | stacked-fractions ]"
  },
  {
    "name": "<overflow-position>",
    "syntax": "unsafe | safe"
  },
  {
    "name": "<clip-source>",
    "syntax": "<url>"
  },
  {
    "name": "<general-enclosed>",
    "syntax": "[ <function-token> <any-value>? ) ] | [ ( <any-value>? ) ]"
  },
  {
    "name": "<whitespace-token>",
    "syntax": ""
  },
  {
    "name": "<font-format>",
    "syntax": "[<string> | collection | embedded-opentype | opentype | svg | truetype | woff | woff2 ]"
  },
  {
    "name": "<length-percentage>",
    "syntax": "[ <length> | <percentage> ]"
  },
  {
    "name": "<calc-product>",
    "syntax": "<calc-value> [ [ '*' | '/' ] <calc-value> ]*"
  },
  {
    "name": "<compound-selector>",
    "syntax": "[ <type-selector>? <subclass-selector>* ]!"
  },
  {
    "name": "<hue-interpolation-method>",
    "syntax": "[ shorter | longer | increasing | decreasing ] hue"
  },
  {
    "name": "<[-token>",
    "syntax": ""
  },
  {
    "name": "repeating-radial-gradient()",
    "syntax": "repeating-radial-gradient( [ <radial-gradient-syntax> ] )"
  },
  {
    "name": "<page-selector-list>",
    "syntax": "<page-selector>#"
  },
  {
    "name": "<CDO-token>",
    "syntax": ""
  },
  {
    "name": "<ratio>",
    "syntax": "<number [0,∞]> [ / <number [0,∞]> ]?"
  },
  {
    "name": "hypot()",
    "syntax": "hypot( <calc-sum># )"
  },
  {
    "name": "<boolean>",
    "syntax": "<bool-not> | <bool-in-parens> [ <bool-and>* | <bool-or>* ]"
  },
  {
    "name": "<bg-size>",
    "syntax": "[ <length-percentage [0,∞]> | auto ]{1,2} | cover | contain"
  },
  {
    "name": "<linear-stop-length>",
    "syntax": "<percentage>{1,2}"
  },
  {
    "name": "<line-name-list>",
    "syntax": "[ <line-names> | <name-repeat> ]+"
  },
  {
    "name": "<content-list>",
    "syntax": "[ <string> | <counter()> | <counters()> | <content()> | <attr()> ]+"
  },
  {
    "name": "<custom-highlight-name>",
    "syntax": ""
  },
  {
    "name": "<media-not>",
    "syntax": "not <media-in-parens>"
  },
  {
    "name": "<mf-eq>",
    "syntax": "'='"
  },
  {
    "name": "<time>",
    "syntax": ""
  },
  {
    "name": "atan2()",
    "syntax": "atan2( <calc-sum>, <calc-sum> )"
  },
  {
    "name": "<forgiving-selector-list>",
    "syntax": ""
  },
  {
    "name": "palette-mix()",
    "syntax": "palette-mix(<color-interpolation-method> , [ [normal | light | dark | <palette-identifier> | <palette-mix()> ] && <percentage [0,100]>? ]#{2})"
  },
  {
    "name": "<rule-list>",
    "syntax": ""
  },
  {
    "name": "<offset-path>",
    "syntax": "<ray()> | <url> | <basic-shape>"
  },
  {
    "name": "<attr-modifier>",
    "syntax": "i | s"
  },
  {
    "name": "<legacy-hsl-syntax>",
    "syntax": "hsl( <hue>, <percentage>, <percentage>, <alpha-value>? )"
  },
  {
    "name": "<visual-box>",
    "syntax": "content-box | padding-box | border-box"
  },
  {
    "name": "<axis>",
    "syntax": "block | inline | x | y"
  },
  {
    "name": "<animateable-feature>",
    "syntax": "scroll-position | contents | <custom-ident>"
  },
  {
    "name": "<fixed-size>",
    "syntax": "<fixed-breadth> | minmax( <fixed-breadth> , <track-breadth> ) | minmax( <inflexible-breadth> , <fixed-breadth> )"
  },
  {
    "name": "<syntax-component>",
    "syntax": "<syntax-component-name> <syntax-multiplier>? | '<' transform-list '>'"
  },
  {
    "name": "<keyframe-block>",
    "syntax": "<keyframe-selector># { <declaration-list> }"
  },
  {
    "name": "<single-animation-direction>",
    "syntax": "normal | reverse | alternate | alternate-reverse"
  },
  {
    "name": "<mf-name>",
    "syntax": "<ident>"
  },
  {
    "name": "<repeat-style>",
    "syntax": "repeat-x | repeat-y | [repeat | space | round | no-repeat]{1,2}"
  },
  {
    "name": "<cubic-bezier-easing-function>",
    "syntax": "ease | ease-in | ease-out | ease-in-out | cubic-bezier(<number [0,1]>, <number>, <number [0,1]>, <number>)"
  },
  {
    "name": "<radial-size>",
    "syntax": "<radial-extent> | <length [0,∞]> | <length-percentage [0,∞]>{2}"
  },
  {
    "name": "<hash-token>",
    "syntax": ""
  },
  {
    "name": "<signless-integer>",
    "syntax": ""
  },
  {
    "name": "<numeric-figure-values>",
    "syntax": "[ lining-nums | oldstyle-nums ]"
  },
  {
    "name": "paint()",
    "syntax": "paint( <ident>, <declaration-value>? )"
  },
  {
    "name": "<line-width>",
    "syntax": "<length [0,∞]> | thin | medium | thick"
  },
  {
    "name": "<linear-easing-function>",
    "syntax": "linear(<linear-stop-list>)"
  },
  {
    "name": "<color-stop-list>",
    "syntax": "<linear-color-stop> , [ <linear-color-hint>? , <linear-color-stop> ]#?"
  },
  {
    "name": "env()",
    "syntax": "env( <custom-ident> <integer [0,∞]>*, <declaration-value>? )"
  },
  {
    "name": "<legacy-rgba-syntax>",
    "syntax": "rgba( <percentage>#{3} , <alpha-value>? ) | rgba( <number>#{3} , <alpha-value>? )"
  },
  {
    "name": "<color-interpolation-method>",
    "syntax": "in [ <rectangular-color-space> | <polar-color-space> <hue-interpolation-method>? ]"
  },
  {
    "name": "<anchor-element>",
    "syntax": "<dashed-ident>"
  },
  {
    "name": "<single-animation-play-state>",
    "syntax": "running | paused"
  },
  {
    "name": "acos()",
    "syntax": "acos( <calc-sum> )"
  },
  {
    "name": "<bool-not>",
    "syntax": "not <bool-in-parens>"
  },
  {
    "name": "<simple-selector>",
    "syntax": "<type-selector> | <subclass-selector>"
  },
  {
    "name": "<legacy-rgb-syntax>",
    "syntax": "rgb( <percentage>#{3} , <alpha-value>? ) | rgb( <number>#{3} , <alpha-value>? )"
  },
  {
    "name": "<number-token>",
    "syntax": ""
  },
  {
    "name": "<an+b>",
    "syntax": "odd | even | <integer> | <n-dimension> | '+'? n | -n | <ndashdigit-dimension> | '+'? <ndashdigit-ident> | <dashndashdigit-ident> | <n-dimension> <signed-integer> | '+'? n <signed-integer> | -n <signed-integer> | <ndash-dimension> <signless-integer> | '+'? n- <signless-integer> | -n- <signless-integer> | <n-dimension> ['+' | '-'] <signless-integer> | '+'? n ['+' | '-'] <signless-integer> | -n ['+' | '-'] <signless-integer>"
  },
  {
    "name": "<signed-integer>",
    "syntax": ""
  },
  {
    "name": "<generic-family>",
    "syntax": "<generic-script-specific>| <generic-complete> | <generic-incomplete>"
  },
  {
    "name": "<self-position>",
    "syntax": "center | start | end | self-start | self-end | flex-start | flex-end"
  },
  {
    "name": "<inflexible-breadth>",
    "syntax": "<length-percentage [0,∞]> | min-content | max-content | auto"
  },
  {
    "name": "counter()",
    "syntax": "counter( <counter-name>, <counter-style>? )"
  },
  {
    "name": "<box>",
    "syntax": ""
  },
  {
    "name": "<basic-shape-rect>",
    "syntax": "<inset()> | <rect()> | <xywh()>"
  },
  {
    "name": "lab()",
    "syntax": "lab( [<percentage> | <number> | none] [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ / [<alpha-value> | none] ]? )"
  },
  {
    "name": "<easing-function>",
    "syntax": "linear | <linear-easing-function> | <cubic-bezier-easing-function> | <step-easing-function>"
  },
  {
    "name": "linear()",
    "syntax": "linear(<linear-stop-list>)"
  },
  {
    "name": "<media-query>",
    "syntax": "<media-condition> | [ not | only ]? <media-type> [ and <media-condition-without-or> ]?"
  },
  {
    "name": "<media-or>",
    "syntax": "or <media-in-parens>"
  },
  {
    "name": "<angle-percentage>",
    "syntax": "[ <angle> | <percentage> ]"
  },
  {
    "name": "atan()",
    "syntax": "atan( <calc-sum> )"
  },
  {
    "name": "<complex-real-selector-list>",
    "syntax": "<complex-real-selector>#"
  },
  {
    "name": "<display-box>",
    "syntax": "contents | none"
  },
  {
    "name": "<font-width-css3>",
    "syntax": "[normal | ultra-condensed | extra-condensed | condensed | semi-condensed | semi-expanded | expanded | extra-expanded | ultra-expanded]"
  },
  {
    "name": "<function-dependency-list>",
    "syntax": "<function-parameter>#"
  },
  {
    "name": "<syntax-multiplier>",
    "syntax": "[ '#' | '+' ]"
  },
  {
    "name": "<counter-style-name>",
    "syntax": ""
  },
  {
    "name": "running()",
    "syntax": "running( <custom-ident> )"
  },
  {
    "name": "<url-token>",
    "syntax": ""
  },
  {
    "name": "<(-token>",
    "syntax": ""
  },
  {
    "name": "<at-rule-list>",
    "syntax": ""
  },
  {
    "name": "<font-tech>",
    "syntax": "[<font-features-tech> | <color-font-tech> | variations | palettes | incremental ]"
  },
  {
    "name": "<calc-keyword>",
    "syntax": "e | pi | infinity | -infinity | NaN"
  },
  {
    "name": "<attachment>",
    "syntax": "scroll | fixed | local"
  },
  {
    "name": "<relative-selector-list>",
    "syntax": "<relative-selector>#"
  },
  {
    "name": "<syntax-component-name>",
    "syntax": "'<' <syntax-type> '>' | <custom-ident>"
  },
  {
    "name": "<linear-color-hint>",
    "syntax": "<length-percentage>"
  },
  {
    "name": "<mf-gt>",
    "syntax": "'>' '='?"
  },
  {
    "name": "<type-selector>",
    "syntax": "<wq-name> | <ns-prefix>? '*'"
  },
  {
    "name": "<color>",
    "syntax": "<color-base> | currentColor | <system-color>"
  },
  {
    "name": "<polar-color-space>",
    "syntax": "hsl | hwb | lch | oklch"
  },
  {
    "name": "<dimension>",
    "syntax": ""
  },
  {
    "name": "<calc-sum>",
    "syntax": "<calc-product> [ [ '+' | '-' ] <calc-product> ]*"
  },
  {
    "name": "<subclass-selector>",
    "syntax": "<id-selector> | <class-selector> | <attribute-selector> | <pseudo-class-selector>"
  },
  {
    "name": "<color-function>",
    "syntax": "<rgb()> | <rgba()> | <hsl()> | <hsla()> | <hwb()> | <lab()> | <lch()> | <oklab()> | <oklch()> | <color()>"
  },
  {
    "name": "<display-legacy>",
    "syntax": "inline-block | inline-table | inline-flex | inline-grid"
  },
  {
    "name": "<feature-value-name>",
    "syntax": "<ident>"
  },
  {
    "name": "<color-base>",
    "syntax": "<hex-color> | <color-function> | <named-color> | transparent"
  },
  {
    "name": "repeating-linear-gradient()",
    "syntax": "repeating-linear-gradient( [ <linear-gradient-syntax> ] )"
  },
  {
    "name": "<bad-string-token>",
    "syntax": ""
  },
  {
    "name": "<delim-token>",
    "syntax": ""
  },
  {
    "name": "<CDC-token>",
    "syntax": ""
  },
  {
    "name": "<unicode-range-token>",
    "syntax": ""
  },
  {
    "name": "<composite-mode>",
    "syntax": "clear | copy | source-over | destination-over | source-in | destination-in | source-out | destination-out | source-atop | destination-atop | xor | lighter | plus-darker | plus-lighter"
  },
  {
    "name": "calc()",
    "syntax": "calc( <calc-sum> )"
  },
  {
    "name": "<class-selector>",
    "syntax": "'.' <ident-token>"
  },
  {
    "name": "repeat()",
    "syntax": ""
  },
  {
    "name": "<namespace-prefix>",
    "syntax": "<ident>"
  },
  {
    "name": "pow()",
    "syntax": "pow( <calc-sum>, <calc-sum> )"
  },
  {
    "name": "ray()",
    "syntax": "ray( <angle> && <ray-size>? && contain? && [at <position>]? )"
  },
  {
    "name": "<filter-value-list>",
    "syntax": "[ <filter-function> | <url> ]+"
  },
  {
    "name": "scroll()",
    "syntax": "scroll( [ <scroller> || <axis> ]? )"
  },
  {
    "name": "<layout-box>",
    "syntax": "<visual-box> | margin-box"
  },
  {
    "name": "<coord-box>",
    "syntax": "<paint-box> | view-box"
  },
  {
    "name": "sign()",
    "syntax": "sign( <calc-sum> )"
  },
  {
    "name": "<bool-or>",
    "syntax": "or <bool-in-parens>"
  },
  {
    "name": "<complex-selector-unit>",
    "syntax": "[ <compound-selector>? <pseudo-compound-selector>* ]!"
  },
  {
    "name": "<side-or-corner>",
    "syntax": "[left | right] || [top | bottom]"
  },
  {
    "name": "<extension-name>",
    "syntax": ""
  },
  {
    "name": "<any-value>",
    "syntax": ""
  },
  {
    "name": "<url>",
    "syntax": "<url()> | <src()>"
  },
  {
    "name": "<zero>",
    "syntax": ""
  },
  {
    "name": "symbols()",
    "syntax": "symbols( <symbols-type>? [ <string> | <image> ]+ )"
  },
  {
    "name": "<counter-style>",
    "syntax": "<counter-style-name> | <symbols()>"
  },
  {
    "name": "linear-gradient()",
    "syntax": "linear-gradient( [ <linear-gradient-syntax> ] )"
  },
  {
    "name": "<linear-gradient-syntax>",
    "syntax": "[ <angle> | to <side-or-corner> ]? , <color-stop-list>"
  },
  {
    "name": "<dimension-token>",
    "syntax": ""
  },
  {
    "name": "<n-dimension>",
    "syntax": ""
  },
  {
    "name": "<family-name>",
    "syntax": "<string> | <custom-ident>+"
  },
  {
    "name": "log()",
    "syntax": "log( <calc-sum>, <calc-sum>? )"
  },
  {
    "name": "<line-style>",
    "syntax": "none | hidden | dotted | dashed | solid | double | groove | ridge | inset | outset"
  },
  {
    "name": "rgba()",
    "syntax": "[ <legacy-rgba-syntax> | <modern-rgba-syntax> ]"
  },
  {
    "name": "<media-condition>",
    "syntax": "<media-not> | <media-in-parens> [ <media-and>* | <media-or>* ]"
  },
  {
    "name": "<mf-range>",
    "syntax": "<mf-name> <mf-comparison> <mf-value> | <mf-value> <mf-comparison> <mf-name> | <mf-value> <mf-lt> <mf-name> <mf-lt> <mf-value> | <mf-value> <mf-gt> <mf-name> <mf-gt> <mf-value>"
  },
  {
    "name": "<layer-name>",
    "syntax": "<ident> [ '.' <ident> ]*"
  },
  {
    "name": "<string>",
    "syntax": ""
  },
  {
    "name": "<position>",
    "syntax": "[ [ left | center | right | top | bottom | <length-percentage> ] | [ left | center | right ] && [ top | center | bottom ] | [ left | center | right | <length-percentage> ] [ top | center | bottom | <length-percentage> ] | [ [ left | right ] <length-percentage> ] && [ [ top | bottom ] <length-percentage> ] ]"
  },
  {
    "name": "<modern-rgb-syntax>",
    "syntax": "rgb( [ <number> | <percentage> | none]{3} [ / [<alpha-value> | none] ]? )"
  },
  {
    "name": "hsla()",
    "syntax": "[ <legacy-hsla-syntax> | <modern-hsla-syntax> ]"
  },
  {
    "name": "<step-easing-function>",
    "syntax": "step-start | step-end | steps(<integer> , <step-position>?)"
  },
  {
    "name": "<function-name>",
    "syntax": "<dashed-ident>"
  },
  {
    "name": "<function-parameter>",
    "syntax": "<custom-property-name> <css-type>? [ : <declaration-value> ]?"
  },
  {
    "name": "<blend-mode>",
    "syntax": "normal | multiply | screen | overlay | darken | lighten | color-dodge |color-burn | hard-light | soft-light | difference | exclusion | hue | saturation | color | luminosity"
  },
  {
    "name": "<quirky-length>",
    "syntax": ""
  },
  {
    "name": "<deprecated-color>",
    "syntax": ""
  },
  {
    "name": "<media-and>",
    "syntax": "and <media-in-parens>"
  },
  {
    "name": "<time-percentage>",
    "syntax": "[ <time> | <percentage> ]"
  },
  {
    "name": "<linear-stop-list>",
    "syntax": "[ <linear-stop> ]#"
  },
  {
    "name": "<dashed-ident>",
    "syntax": ""
  },
  {
    "name": "<angle>",
    "syntax": ""
  },
  {
    "name": "<modern-rgba-syntax>",
    "syntax": "rgba( [ <number> | <percentage> | none]{3} [ / [<alpha-value> | none] ]? )"
  },
  {
    "name": "<anchor-side>",
    "syntax": "inside | outside | top | left | right | bottom | start | end | self-start | self-end | <percentage> | center"
  },
  {
    "name": "anchor()",
    "syntax": "anchor( <anchor-element>? && <anchor-side>, <length-percentage>? )"
  },
  {
    "name": "<contextual-alt-values>",
    "syntax": "[ contextual | no-contextual ]"
  },
  {
    "name": "<supports-decl>",
    "syntax": "( <declaration> )"
  },
  {
    "name": "<bg-layer>",
    "syntax": "<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <visual-box> || <visual-box>"
  },
  {
    "name": "<legacy-hsla-syntax>",
    "syntax": "hsla( <hue>, <percentage>, <percentage>, <alpha-value>? )"
  },
  {
    "name": "<transform-function>",
    "syntax": ""
  },
  {
    "name": "<declaration-rule-list>",
    "syntax": ""
  },
  {
    "name": "<page-selector>",
    "syntax": "[ <ident-token>? <pseudo-page>* ]!"
  },
  {
    "name": "<position-area>",
    "syntax": "[ [ left | center | right | span-left | span-right | x-start | x-end | span-x-start | span-x-end | x-self-start | x-self-end | span-x-self-start | span-x-self-end | span-all ] || [ top | center | bottom | span-top | span-bottom | y-start | y-end | span-y-start | span-y-end | y-self-start | y-self-end | span-y-self-start | span-y-self-end | span-all ] | [ block-start | center | block-end | span-block-start | span-block-end | span-all ] || [ inline-start | center | inline-end | span-inline-start | span-inline-end | span-all ] | [ self-block-start | center | self-block-end | span-self-block-start | span-self-block-end | span-all ] || [ self-inline-start | center | self-inline-end | span-self-inline-start | span-self-inline-end | span-all ] | [ start | center | end | span-start | span-end | span-all ]{1,2} | [ self-start | center | self-end | span-self-start | span-self-end | span-all ]{1,2} ]"
  },
  {
    "name": "<declaration-value>",
    "syntax": ""
  },
  {
    "name": "<media-in-parens>",
    "syntax": "( <media-condition> ) | ( <media-feature> ) | <general-enclosed>"
  },
  {
    "name": "<custom-ident>",
    "syntax": ""
  },
  {
    "name": "<frequency-percentage>",
    "syntax": "[ <frequency> | <percentage> ]"
  },
  {
    "name": "<supports-condition>",
    "syntax": "not <supports-in-parens> | <supports-in-parens> [ and <supports-in-parens> ]* | <supports-in-parens> [ or <supports-in-parens> ]*"
  },
  {
    "name": "<generic-voice>",
    "syntax": "[<age>? <gender> <integer>?]"
  },
  {
    "name": "<font-weight-absolute>",
    "syntax": "[normal | bold | <number [1,1000]>]"
  },
  {
    "name": "<eof-token>",
    "syntax": ""
  },
  {
    "name": "<numeric-spacing-values>",
    "syntax": "[ proportional-nums | tabular-nums ]"
  },
  {
    "name": "<source-size-list>",
    "syntax": "<source-size>#? , <source-size-value>"
  },
  {
    "name": "<linear-stop>",
    "syntax": "<number> && <linear-stop-length>?"
  },
  {
    "name": "<css-type>",
    "syntax": "<syntax-component> | <type()>"
  },
  {
    "name": "<custom-arg>",
    "syntax": "$ <ident-token> ;"
  },
  {
    "name": "<single-transition-property>",
    "syntax": "all | <custom-ident>"
  },
  {
    "name": "<font-src-list>",
    "syntax": ""
  },
  {
    "name": "<supports-in-parens>",
    "syntax": "( <supports-condition> ) | <supports-feature> | <general-enclosed>"
  },
  {
    "name": "<attr-matcher>",
    "syntax": "[ '~' | '|' | '^' | '$' | '*' ]? '='"
  },
  {
    "name": "<basic-shape>",
    "syntax": ""
  },
  {
    "name": "anchor-size()",
    "syntax": "anchor-size( [ <anchor-element> || <anchor-size> ]? , <length-percentage>? )"
  },
  {
    "name": "<bad-url-token>",
    "syntax": ""
  },
  {
    "name": "<combinator>",
    "syntax": "'>' | '+' | '~' | [ '|' '|' ]"
  },
  {
    "name": "<ndash-dimension>",
    "syntax": ""
  },
  {
    "name": "<rounding-strategy>",
    "syntax": "nearest | up | down | to-zero"
  },
  {
    "name": "<pseudo-compound-selector>",
    "syntax": "<pseudo-element-selector> <pseudo-class-selector>*"
  },
  {
    "name": "<percentage-token>",
    "syntax": ""
  },
  {
    "name": "<display-outside>",
    "syntax": "block | inline | run-in"
  },
  {
    "name": "<font-features-tech>",
    "syntax": "[features-opentype | features-aat | features-graphite]"
  },
  {
    "name": "<pseudo-class-selector>",
    "syntax": "':' <ident-token> | ':' <function-token> <any-value> ')'"
  },
  {
    "name": "<single-animation-iteration-count>",
    "syntax": "infinite | <number [0,∞]>"
  },
  {
    "name": "<import-conditions>",
    "syntax": "[ supports( [ <supports-condition> | <declaration> ] ) ]? <media-query-list>?"
  },
  {
    "name": "<integer>",
    "syntax": ""
  },
  {
    "name": "<frequency>",
    "syntax": ""
  },
  {
    "name": "<complex-selector-list>",
    "syntax": "<complex-selector>#"
  },
  {
    "name": "<modern-hsl-syntax>",
    "syntax": "hsl( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )"
  },
  {
    "name": "<flex>",
    "syntax": ""
  },
  {
    "name": "<syntax-type>",
    "syntax": "angle | color | custom-ident | image | integer | length | length-percentage | number | percentage | resolution | string | time | url | transform-function"
  },
  {
    "name": "<try-size>",
    "syntax": "most-width | most-height | most-block-size | most-inline-size"
  },
  {
    "name": "<string-token>",
    "syntax": ""
  },
  {
    "name": "<keyframe-selector>",
    "syntax": "from | to | <percentage [0,100]>"
  },
  {
    "name": "view()",
    "syntax": "view( [ <axis> || <'view-timeline-inset'> ]? )"
  },
  {
    "name": "<masking-mode>",
    "syntax": "alpha | luminance | match-source"
  },
  {
    "name": "<single-animation>",
    "syntax": "<time [0s,∞]> || <easing-function> || <time> || <single-animation-iteration-count> || <single-animation-direction> || <single-animation-fill-mode> || <single-animation-play-state> || [ none | <keyframes-name> ]"
  },
  {
    "name": "<hex-color>",
    "syntax": ""
  },
  {
    "name": "<{-token>",
    "syntax": ""
  },
  {
    "name": "<}-token>",
    "syntax": ""
  },
  {
    "name": "<color-font-tech>",
    "syntax": "[color-COLRv0 | color-COLRv1 | color-SVG | color-sbix | color-CBDT ]"
  },
  {
    "name": "min()",
    "syntax": "min( <calc-sum># )"
  },
  {
    "name": "<system-color>",
    "syntax": ""
  },
  {
    "name": "<semicolon-token>",
    "syntax": ""
  },
  {
    "name": "<generic-script-specific>",
    "syntax": "generic(kai) | generic(fangsong) | generic(nastaliq)"
  },
  {
    "name": "<generic-incomplete>",
    "syntax": "ui-serif | ui-sans-serif | ui-monospace | ui-rounded"
  },
  {
    "name": "<mf-comparison>",
    "syntax": "<mf-lt> | <mf-gt> | <mf-eq>"
  },
  {
    "name": "<shadow>",
    "syntax": "<color>? && [<length>{2} <length [0,∞]>? <length>?] && inset?"
  },
  {
    "name": "<pseudo-page>",
    "syntax": "':' [ left | right | first | blank ]"
  },
  {
    "name": "<scroller>",
    "syntax": "root | nearest | self"
  },
  {
    "name": "<comma-token>",
    "syntax": ""
  },
  {
    "name": "<media-condition-without-or>",
    "syntax": "<media-not> | <media-in-parens> <media-and>*"
  },
  {
    "name": "<supports-feature>",
    "syntax": "<supports-decl>"
  },
  {
    "name": "<line-names>",
    "syntax": "'[' <custom-ident>* ']'"
  },
  {
    "name": "<auto-repeat>",
    "syntax": "repeat( [ auto-fill | auto-fit ] , [ <line-names>? <fixed-size> ]+ <line-names>? )"
  },
  {
    "name": "<function-parameter-list>",
    "syntax": "<function-parameter>#"
  },
  {
    "name": "<pt-name-selector>",
    "syntax": "'*' | <custom-ident>"
  },
  {
    "name": "<track-size>",
    "syntax": "<track-breadth> | minmax( <inflexible-breadth> , <track-breadth> ) | fit-content( <length-percentage [0,∞]> )"
  },
  {
    "name": "<outline-line-style>",
    "syntax": ""
  },
  {
    "name": "<url-modifier>",
    "syntax": ""
  },
  {
    "name": "<boolean-without-or>",
    "syntax": "<bool-not> | <bool-in-parens> <bool-and>*"
  },
  {
    "name": "<bool-in-parens>",
    "syntax": "( <boolean> ) | <bool-test> | <general-enclosed>"
  },
  {
    "name": "<relative-real-selector>",
    "syntax": "<combinator>? <complex-real-selector>"
  },
  {
    "name": "<rectangular-color-space>",
    "syntax": "srgb | srgb-linear | display-p3 | a98-rgb | prophoto-rgb | rec2020 | lab | oklab | xyz | xyz-d50 | xyz-d65"
  },
  {
    "name": "<target-name>",
    "syntax": ""
  },
  {
    "name": "<system-family-name>",
    "syntax": "caption | icon | menu | message-box | small-caption | status-bar"
  },
  {
    "name": "<named-color>",
    "syntax": ""
  },
  {
    "name": "<number-optional-number>",
    "syntax": "<number> <number>?"
  },
  {
    "name": "<block-contents>",
    "syntax": ""
  },
  {
    "name": "<discretionary-lig-values>",
    "syntax": "[ discretionary-ligatures | no-discretionary-ligatures ]"
  },
  {
    "name": "cos()",
    "syntax": "cos( <calc-sum> )"
  },
  {
    "name": "<font-src>",
    "syntax": "<url> [ format(<font-format>)]? [ tech( <font-tech>#)]? | local(<family-name>)"
  },
  {
    "name": "<legacy-pseudo-element-selector>",
    "syntax": "':' [before | after | first-line | first-letter]"
  },
  {
    "name": "hsl()",
    "syntax": "[ <legacy-hsl-syntax> | <modern-hsl-syntax> ]"
  },
  {
    "name": "<source-size-value>",
    "syntax": "<length> | auto"
  },
  {
    "name": "<symbol>",
    "syntax": "<string> | <image> | <custom-ident>"
  },
  {
    "name": "<paint>",
    "syntax": "none | <image> | <svg-paint>"
  },
  {
    "name": "<east-asian-variant-values>",
    "syntax": "[ jis78 | jis83 | jis90 | jis04 | simplified | traditional ]"
  },
  {
    "name": "<media-feature>",
    "syntax": "[ <mf-plain> | <mf-boolean> | <mf-range> ]"
  },
  {
    "name": "<mf-value>",
    "syntax": "<number> | <dimension> | <ident> | <ratio>"
  },
  {
    "name": "exp()",
    "syntax": "exp( <calc-sum> )"
  },
  {
    "name": "<relative-selector>",
    "syntax": "<combinator>? <complex-selector>"
  },
  {
    "name": "<anchor-size>",
    "syntax": "width | height | block | inline | self-block | self-inline"
  },
  {
    "name": "<xyz-space>",
    "syntax": "xyz | xyz-d50 | xyz-d65"
  },
  {
    "name": "<link-param>",
    "syntax": "param( <custom-property-name> <declaration-value>? )"
  },
  {
    "name": "<name-repeat>",
    "syntax": "repeat( [ <integer [1,∞]> | auto-fill ], <line-names>+)"
  },
  {
    "name": "<content-distribution>",
    "syntax": "space-between | space-around | space-evenly | stretch"
  },
  {
    "name": "url()",
    "syntax": "url( <string> <url-modifier>* ) | <url-token>"
  },
  {
    "name": "mod()",
    "syntax": "mod( <calc-sum>, <calc-sum> )"
  },
  {
    "name": "<bg-image>",
    "syntax": "<image> | none"
  },
  {
    "name": "<id-selector>",
    "syntax": "<hash-token>"
  },
  {
    "name": "<modern-hsla-syntax>",
    "syntax": "hsla( [<hue> | none] [<percentage> | <number> | none] [<percentage> | <number> | none] [ / [<alpha-value> | none] ]? )"
  },
  {
    "name": "<filter-function>",
    "syntax": "<blur()> | <brightness()> | <contrast()> | <drop-shadow()> | <grayscale()> | <hue-rotate()> | <invert()> | <opacity()> | <sepia()> | <saturate()>"
  },
  {
    "name": "<fixed-breadth>",
    "syntax": "<length-percentage [0,∞]>"
  },
  {
    "name": "<mask-layer>",
    "syntax": "<mask-reference> || <position> [ / <bg-size> ]? || <repeat-style> || <geometry-box> || [ <geometry-box> | no-clip ] || <compositing-operator> || <masking-mode>"
  },
  {
    "name": "asin()",
    "syntax": "asin( <calc-sum> )"
  },
  {
    "name": "<final-bg-layer>",
    "syntax": "<bg-image> || <bg-position> [ / <bg-size> ]? || <repeat-style> || <attachment> || <visual-box> || <visual-box> || <'background-color'>"
  },
  {
    "name": "<complex-real-selector>",
    "syntax": "<compound-selector> [ <combinator>? <compound-selector> ]*"
  },
  {
    "name": "<hue>",
    "syntax": "<number> | <angle>"
  },
  {
    "name": "<syntax-combinator>",
    "syntax": "'|'"
  },
  {
    "name": "<radial-shape>",
    "syntax": "circle | ellipse"
  },
  {
    "name": "<reversed-counter-name>",
    "syntax": "reversed( <counter-name> )"
  },
  {
    "name": "<]-token>",
    "syntax": ""
  },
  {
    "name": "<common-lig-values>",
    "syntax": "[ common-ligatures | no-common-ligatures ]"
  },
  {
    "name": "<source-size>",
    "syntax": "<media-condition> <source-size-value> | auto"
  },
  {
    "name": "<transform-list>",
    "syntax": "<transform-function>+"
  },
  {
    "name": "<syntax>",
    "syntax": "'*' | <syntax-component> [ <syntax-combinator> <syntax-component> ]+"
  },
  {
    "name": "<keyframes-name>",
    "syntax": "<custom-ident> | <string>"
  },
  {
    "name": "<mf-lt>",
    "syntax": "'<' '='?"
  },
  {
    "name": "<bool-test>",
    "syntax": ""
  },
  {
    "name": "<ray-size>",
    "syntax": "closest-side | closest-corner | farthest-side | farthest-corner | sides"
  },
  {
    "name": "<selector-list>",
    "syntax": "<complex-selector-list>"
  },
  {
    "name": "<image>",
    "syntax": "<url> | <gradient>"
  },
  {
    "name": "<radial-gradient-syntax>",
    "syntax": "[ <radial-shape> || <radial-size> ]? [ at <position> ]? , <color-stop-list>"
  },
  {
    "name": "<track-list>",
    "syntax": "[ <line-names>? [ <track-size> | <track-repeat> ] ]+ <line-names>?"
  },
  {
    "name": "<counter-name>",
    "syntax": ""
  },
  {
    "name": "<single-animation-fill-mode>",
    "syntax": "none | forwards | backwards | both"
  },
  {
    "name": "sin()",
    "syntax": "sin( <calc-sum> )"
  },
  {
    "name": "<simple-selector-list>",
    "syntax": "<simple-selector>#"
  },
  {
    "name": "<pseudo-element-selector>",
    "syntax": "':' <pseudo-class-selector> | <legacy-pseudo-element-selector>"
  },
  {
    "name": "<color-space>",
    "syntax": "<rectangular-color-space> | <polar-color-space>"
  },
  {
    "name": "<compositing-operator>",
    "syntax": "add | subtract | intersect | exclude"
  },
  {
    "name": "<auto-track-list>",
    "syntax": "[ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>? <auto-repeat> [ <line-names>? [ <fixed-size> | <fixed-repeat> ] ]* <line-names>?"
  },
  {
    "name": "<explicit-track-list>",
    "syntax": "[ <line-names>? <track-size> ]+ <line-names>?"
  },
  {
    "name": "<fixed-repeat>",
    "syntax": "repeat( [ <integer [1,∞]> ] , [ <line-names>? <fixed-size> ]+ <line-names>? )"
  },
  {
    "name": "<geometry-box>",
    "syntax": "<shape-box> | fill-box | stroke-box | view-box"
  },
  {
    "name": "<mf-plain>",
    "syntax": "<mf-name> : <mf-value>"
  },
  {
    "name": "<paint-box>",
    "syntax": "<visual-box> | fill-box | stroke-box"
  },
  {
    "name": "<single-transition>",
    "syntax": "[ none | <single-transition-property> ] || <time> || <easing-function> || <time>"
  },
  {
    "name": "<ident-token>",
    "syntax": ""
  },
  {
    "name": "clamp()",
    "syntax": "clamp( [ <calc-sum> | none ], <calc-sum>, [ <calc-sum> | none ] )"
  },
  {
    "name": "<calc-value>",
    "syntax": "<number> | <dimension> | <percentage> | <calc-keyword> | ( <calc-sum> )"
  },
  {
    "name": "<display-internal>",
    "syntax": "table-row-group | table-header-group | table-footer-group | table-row | table-cell | table-column-group | table-column | table-caption | ruby-base | ruby-text | ruby-base-container | ruby-text-container"
  },
  {
    "name": "<dashndashdigit-ident>",
    "syntax": ""
  },
  {
    "name": "<generic-complete>",
    "syntax": "serif | sans-serif | system-ui | cursive | fantasy | math | monospace"
  },
  {
    "name": "<font-variant-css2>",
    "syntax": "[normal | small-caps]"
  },
  {
    "name": "max()",
    "syntax": "max( <calc-sum># )"
  },
  {
    "name": "rem()",
    "syntax": "rem( <calc-sum>, <calc-sum> )"
  },
  {
    "name": "sqrt()",
    "syntax": "sqrt( <calc-sum> )"
  },
  {
    "name": "<complex-selector>",
    "syntax": "<complex-selector-unit> [ <combinator>? <complex-selector-unit> ]*"
  },
  {
    "name": "<wq-name>",
    "syntax": "<ns-prefix>? <ident-token>"
  },
  {
    "name": "<east-asian-width-values>",
    "syntax": "[ full-width | proportional-width ]"
  },
  {
    "name": "lch()",
    "syntax": "lch( [<percentage> | <number> | none] [ <percentage> | <number> | none] [ <hue> | none] [ / [<alpha-value> | none] ]? )"
  },
  {
    "name": "<display-listitem>",
    "syntax": "<display-outside>? && [ flow | flow-root ]? && list-item"
  },
  {
    "name": "<type()>",
    "syntax": "type( <syntax> )"
  },
  {
    "name": "<radial-extent>",
    "syntax": "closest-corner | closest-side | farthest-corner | farthest-side"
  },
  {
    "name": "<mask-reference>",
    "syntax": "none | <image> | <mask-source>"
  },
  {
    "name": "<media-query-list>",
    "syntax": ""
  },
  {
    "name": "<ident>",
    "syntax": ""
  },
  {
    "name": "abs()",
    "syntax": "abs( <calc-sum> )"
  },
  {
    "name": "oklab()",
    "syntax": "oklab( [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ <percentage> | <number> | none] [ / [<alpha-value> | none] ]? )"
  },
  {
    "name": "<media-type>",
    "syntax": "<ident>"
  },
  {
    "name": "<quirky-color>",
    "syntax": ""
  },
  {
    "name": "var()",
    "syntax": "var( <custom-property-name> , <declaration-value>? )"
  },
  {
    "name": "<symbols-type>",
    "syntax": "cyclic | numeric | alphabetic | symbolic | fixed"
  },
  {
    "name": "<ndashdigit-ident>",
    "syntax": ""
  },
  {
    "name": "src()",
    "syntax": "src( <string> <url-modifier>* )"
  },
  {
    "name": "<track-repeat>",
    "syntax": "repeat( [ <integer [1,∞]> ] , [ <line-names>? <track-size> ]+ <line-names>? )"
  },
  {
    "name": "<gradient>",
    "syntax": "<linear-gradient()> | <repeating-linear-gradient()> | <radial-gradient()> | <repeating-radial-gradient()>"
  },
  {
    "name": "counters()",
    "syntax": "counters( <counter-name>, <string>, <counter-style>? )"
  }
]
